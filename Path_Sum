/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    bool helper(TreeNode* root,int path,int target){
        if(root==NULL){
            return false;
        }
        if(root->left==NULL && root->right==NULL){
            if(path==target){
                return true;
            }
            return false;
        }
        if(root->left!=NULL){
           bool result= helper(root->left,path+root->left->val,target);
           if(result==true)return true;
        }
        if(root->right!=NULL){
            bool result=helper(root->right,path+root->right->val,target);
             if(result==true)return true;
        }
        return false;
    }
// bool result; 
    bool hasPathSum(TreeNode* root, int targetSum) {
        // if(root!=NULL && root->left==NULL && root->right==NULL && root->val==targetSum){
        //     return true;
        // }
        // if(root!=NULL && root->val!=targetSum && targetSum==0){
        //     return false;
        // }
        bool r;
        if(root!=NULL){
    r= helper(root,root->val,targetSum);
    }
    return r;
    }
};
