/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    bool mirrorshape(TreeNode* p,TreeNode* q){
    if(p==NULL && q!=NULL || p!=NULL && q==NULL)return false;
    if(p->val!=q->val)return false;
    if(p->left==NULL && q->right!=NULL || p->left!=NULL && q->right==NULL)return false;
    if(p->left!=NULL && q->right!=NULL){
        bool r=mirrorshape(p->left,q->right);
        if(r==false){
            return false;
        }
    }
    if(p->right==NULL && q->left!=NULL || p->right!=NULL && q->left==NULL)return false;
    if(p->right!=NULL && q->left!=NULL){
        bool r=mirrorshape(p->right,q->left);
        if(r==false){
            return false;
        }
    }
    return true;
    }
    bool isSymmetric(TreeNode* root) {
        return mirrorshape(root,root);
    }
};
